<?xml version="1.0"?>
  <root BTCPP_format="4" main_tree_to_execute="Pick and Place Object">
    <BehaviorTree ID="Pick and Place Object" _description="Pick up a small object and place it at a known location">
        <Control ID="Sequence">
            <Action ID="LoadObjectiveParameters" config_file_name="pick_place_object_config.yaml" parameters="{parameters}"/>
            <Script code="first_attempt:=true" />
            <!-- Open the gripper before doing any planning. -->
            <Action ID="MoveGripperAction" gripper_command_action_name="/robotiq_gripper_controller/gripper_cmd" position="0.0"/>

            <Control ID="IfThenElse" name="TryGraspOuter">
                <!-- This decorator contains the logic to detect an object and then execute motion to grasp it.
                     If grasping is aborted because the object changed while the robot was moving towards it, we will retry up to 5 times before giving up. -->
                <Decorator ID="RetryUntilSuccessful" num_attempts="5">
                    <Control ID="IfThenElse" name="TryGraspInner">
                        <Sequence>
                            <!-- Clear the collision octree. -->
                            <Action ID="ClearSnapshot"/>
                            <!-- Remove any objects which might remain in the planning scene from previous pick attempts -->
                            <Action ID="ResetPlanningSceneObjects" apply_planning_scene_service="/apply_planning_scene"/>
                            <!-- Get the latest point cloud from the target topic-->
                            <Action ID="GetPointCloud" topic_name="/scene_camera/depth/color/points" message_out="{point_cloud}"/>
                            <!-- Publish point cloud for display by UI -->
                            <Action ID="UpdatePlanningScene" point_cloud="{point_cloud}" sensor_name="scene_scan_camera" pcd_topic="/pcd_pointcloud_captures" point_cloud_uuid="{request_uuid}"/>
                            <!-- Detect all cuboids in that point cloud-->
                            <Action ID="FindSingularCuboids" point_cloud="{point_cloud}" parameters="{parameters}" detected_shapes="{cuboids}"/>
                            <!-- Find the closest cuboid to the pose calculated from the user's original click -->
                            <Action ID="GetClosestObjectToPose" objects="{cuboids}" pose="{pick_place_object.grasp_pose}" distance_threshold="0.3" closest_object="{cuboid_object}"/>
                            <!-- Add this cuboid to the planning scene. -->
                            <Action ID="ModifyObjectInPlanningScene" object="{cuboid_object}" apply_planning_scene_service="/apply_planning_scene"/>
                            <!-- Use point cloud to update the collision octomap (happens after ModifyObjectInPlanningScene so the cuboid is excluded from the octomap)-->
                            <Action ID="UpdatePlanningSceneService" point_cloud="{point_cloud}" point_cloud_service="/point_cloud_service"/>

                            <!-- Set up an MTC task to pick the cuboid and then plan the task. -->
                            <Action ID="InitializeMTCTask" task_id="pick_place_object" controller_names="/joint_trajectory_controller /robotiq_gripper_controller" task="{task}"/>
                            <Action ID="SetupMTCCurrentState" task="{task}"/>
                            <Action ID="SetupMTCPickCuboid" cuboid_object="{cuboid_object}" task="{task}" parameters="{parameters}"/>
                            <Action ID="PlanMTCTask" solution="{solution}" task="{task}"/>

                            <!-- Send trajectory preview to user only if this is the first time trying to pick the object. -->
                            <Decorator ID="Precondition" name="OnFirstAttemptOnly" if="first_attempt" else="SUCCESS">
                                <Fallback name="WaitForApprovalIfUserAvailable">
                                    <Inverter>
                                        <Action ID="IsUserAvailable" />
                                    </Inverter>
                                    <Action ID="WaitForUserTrajectoryApproval" solution="{solution}" />
                                </Fallback>
                            </Decorator>

                            <!-- Set value to port to skip preview on following attempts. -->
                            <Script code="first_attempt:=false" />

                            <!-- Execute the entire solution. -->
                            <Action ID="ExecuteMTCTask" solution="{solution}"/>
                        </Sequence>

                        <!-- The "Then" condition of the TryGraspInner IfThenElse control. If motion execution succeeded, emit a success to exit the retry loop. -->
                        <Action ID="AlwaysSuccess"/>

                        <!-- The "Else" condition of the TryGraspInner IfThenElse control.  We will reach this part of the Objective if the system detects a significant change in the target object. -->
                        <Control ID="Sequence">
                            <!-- Pause for a short duration, then emit a failure to trigger a retry. -->
                            <Action ID="WaitForDuration" delay_duration="1"/>
                            <Action ID="AlwaysFailure"/>
                        </Control>
                    </Control>
                </Decorator>

                <!-- The "Then" condition of the TryGraspOuter IfThenElse control. After successful grasp, move to dropoff pose and release object, then return home. -->
                <Control ID="Sequence">
                    <Action ID="MoveToJointState" waypoint_name="Place" planning_group_name="manipulator" controller_names="/joint_trajectory_controller /robotiq_gripper_controller"/>
                    <Action ID="MoveGripperAction" gripper_command_action_name="/robotiq_gripper_controller/gripper_cmd" position="0.0"/>
                    <Action ID="MoveToJointState" waypoint_name="Home" planning_group_name="manipulator" controller_names="/joint_trajectory_controller /robotiq_gripper_controller"/>
                </Control>

                <!-- The "Else" condition of the TryGraspOuter IfThenElse control. Move to the Home pose if all retry attempts failed. -->
                <Control ID="Sequence">
                    <Action ID="ClearSnapshot"/>
                    <Action ID="ResetPlanningSceneObjects" apply_planning_scene_service="/apply_planning_scene"/>
                    <Action ID="MoveToJointState" waypoint_name="Home" planning_group_name="manipulator" controller_names="/joint_trajectory_controller /robotiq_gripper_controller"/>
                    <Action ID="AlwaysFailure"/>
                </Control>
            </Control>
        </Control>
    </BehaviorTree>
</root>
