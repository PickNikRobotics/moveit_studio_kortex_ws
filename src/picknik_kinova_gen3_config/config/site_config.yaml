#
#  This contains information for a unique instance of a robot.
#

# Name of the package to specialize
based_on_package: "picknik_kinova_gen3_base_config"

hardware:
  ip: 192.168.13.11
  simulated: ${MOCK_HARDWARE:-true}
  camera_config_file:
    package: "picknik_kinova_gen3_config"
    path: "config/cameras.yaml"
  robot_description:
    urdf:
      package: "picknik_kinova_gen3_config"
      path: "description/kinova_gen3_calibration.xacro"
    urdf_params:
      - arm: "gen3"
      - dof: "7"
      - vision: "false"
      - robot_ip: "%>> hardware.ip"
      - gripper: "robotiq_2f_85"
      # - gripper_joint_name: "finger_joint"
      # - gripper_max_velocity: "10.0"
      # - gripper_max_force: "10.0"
      - username: "admin"
      - password: "admin"
      - port: "10000"
      - port_realtime: "10001"
      - session_inactivity_timeout_ms: "60000"
      - connection_inactivity_timeout_ms: "2000"
      - use_fake_hardware: "%>> hardware.simulated"
      - fake_sensor_commands: "false"
      - use_internal_bus_gripper_comm: "true"
      - wrist_realsense: "false"
      - scene_camera_calibration_file:
          package: "picknik_kinova_gen3_config"
          path: "calibration/scene_camera_calibration.yaml"
  hardware_launch_file:
    package: "picknik_kinova_gen3_config"
    path: "launch/hardware.launch.py"

# This Configures moveit params that are in moveit_config.py
moveit_params:
  joint_group_name: "manipulator"

  ompl_planning:
    package: "picknik_kinova_gen3_base_config"
    path: "config/moveit/ompl_planning.yaml"
  kinematics:
    package: "picknik_kinova_gen3_base_config"
    path: "config/moveit/kinematics.yaml"
  servo:
    package: "picknik_kinova_gen3_config"
    path: "config/moveit/kinova_gen3_servo.yaml"
  sensors_3d:
    package: "picknik_kinova_gen3_base_config"
    path: "config/moveit/sensors_3d.yaml"
  joint_limits:
    package: "picknik_kinova_gen3_base_config"
    path: "config/moveit/joint_limits.yaml"

  publish:
    planning_scene: True
    geometry_updates: True
    state_updates: True
    transforms_updates: True

  trajectory_execution:
    manage_controllers: True
    allowed_execution_duration_scaling: 2.0
    allowed_goal_duration_margin: 5.0
    allowed_start_tolerance: 0.01

# This configures what controllers gets run at startup
ros2_control:
  config:
    package: "picknik_kinova_gen3_config"
    path: "config/control/picknik_kinova_gen3.ros2_control.yaml"
  # Load and start these controllers so they can be used immediately.
  controllers_active_at_startup:
    - "robotiq_gripper_controller"
    - "joint_state_broadcaster"
    - "joint_trajectory_controller"
    - "fault_controller"
  # TODO: Need the ability to enable empty list of inactive controllers at startup
  # Load but do not start these controllers so they can be activated later if needed.
  controllers_inactive_at_startup:
    - "twist_controller" # this controller is currently not able to run at the same time as joint_trajectory_controller and is currently disabled in picknik_kinova_gen3.ros2_control.yaml    
    - "streaming_controller"
objectives:
  # behavior_loader_plugins:
  #   kinova:
  #     - "moveit_studio::behaviors::CoreBehaviorsLoader"
  waypoints_file:
    package_name: "picknik_kinova_gen3_config"
    relative_path: "waypoints/waypoints.yaml"
  objective_library_paths:
    005:
      package_name: "picknik_kinova_gen3_config"
      relative_path: "objectives"
